{"ast":null,"code":"/*! @azure/msal-common v13.3.3 2024-06-06 */\n'use strict';\n\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { AuthError } from '../error/AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar DEFAULT_CRYPTO_IMPLEMENTATION = {\n  createNewGuid: function () {\n    var notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  },\n  base64Decode: function () {\n    var notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  },\n  base64Encode: function () {\n    var notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  },\n  generatePkceCodes: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  },\n  getPublicKeyThumbprint: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Crypto interface - getPublicKeyThumbprint() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  },\n  removeTokenBindingKey: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Crypto interface - removeTokenBindingKey() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  },\n  clearKeystore: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Crypto interface - clearKeystore() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  },\n  signJwt: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Crypto interface - signJwt() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  },\n  hashString: function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var notImplErr;\n      return __generator(this, function (_a) {\n        notImplErr = \"Crypto interface - hashString() has not been implemented\";\n        throw AuthError.createUnexpectedError(notImplErr);\n      });\n    });\n  }\n};\nexport { DEFAULT_CRYPTO_IMPLEMENTATION };","map":{"version":3,"names":["DEFAULT_CRYPTO_IMPLEMENTATION","createNewGuid","notImplErr","AuthError","createUnexpectedError","base64Decode","base64Encode","generatePkceCodes","getPublicKeyThumbprint","removeTokenBindingKey","clearKeystore","signJwt","hashString"],"sources":["C:\\Users\\gustavo.souza\\OneDrive - INSTITUTO DONATO DE OFTALMOLOGIA LTDA\\Documentos\\PROJETOS\\PAINEL_BI\\frontend\\node_modules\\@azure\\msal-common\\src\\crypto\\ICrypto.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"../error/AuthError\";\r\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\r\nimport { SignedHttpRequest } from \"./SignedHttpRequest\";\r\n\r\n/**\r\n * The PkceCodes type describes the structure\r\n * of objects that contain PKCE code\r\n * challenge and verifier pairs\r\n */\r\nexport type PkceCodes = {\r\n    verifier: string,\r\n    challenge: string\r\n};\r\n\r\nexport type SignedHttpRequestParameters = Pick<BaseAuthRequest, \"resourceRequestMethod\" | \"resourceRequestUri\" | \"shrClaims\" | \"shrNonce\" > & {\r\n    correlationId?: string\r\n};\r\n\r\n/**\r\n * Interface for crypto functions used by library\r\n */\r\nexport interface ICrypto {\r\n    /**\r\n     * Creates a guid randomly.\r\n     */\r\n    createNewGuid(): string;\r\n    /**\r\n     * base64 Encode string\r\n     * @param input \r\n     */\r\n    base64Encode(input: string): string;\r\n    /**\r\n     * base64 decode string\r\n     * @param input \r\n     */\r\n    base64Decode(input: string): string;\r\n    /**\r\n     * Generate PKCE codes for OAuth. See RFC here: https://tools.ietf.org/html/rfc7636\r\n     */\r\n    generatePkceCodes(): Promise<PkceCodes>;\r\n    /**\r\n     * Generates an JWK RSA S256 Thumbprint\r\n     * @param request\r\n     */\r\n    getPublicKeyThumbprint(request: SignedHttpRequestParameters): Promise<string>;\r\n    /**\r\n     * Removes cryptographic keypair from key store matching the keyId passed in\r\n     * @param kid \r\n     */\r\n    removeTokenBindingKey(kid: string): Promise<boolean>;\r\n    /**\r\n     * Removes all cryptographic keys from IndexedDB storage\r\n     */\r\n    clearKeystore(): Promise<boolean>;\r\n    /** \r\n     * Returns a signed proof-of-possession token with a given acces token that contains a cnf claim with the required kid.\r\n     * @param accessToken \r\n     */\r\n    signJwt(payload: SignedHttpRequest, kid: string, correlationId?: string): Promise<string>;\r\n    /**\r\n     * Returns the SHA-256 hash of an input string\r\n     * @param plainText\r\n     */\r\n    hashString(plainText: string): Promise<string>;\r\n}\r\n\r\nexport const DEFAULT_CRYPTO_IMPLEMENTATION: ICrypto = {\r\n    createNewGuid: (): string => {\r\n        const notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Decode: (): string => {\r\n        const notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Encode: (): string => {\r\n        const notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    async generatePkceCodes(): Promise<PkceCodes> {\r\n        const notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    async getPublicKeyThumbprint(): Promise<string> {\r\n        const notImplErr = \"Crypto interface - getPublicKeyThumbprint() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    async removeTokenBindingKey(): Promise<boolean> {\r\n        const notImplErr = \"Crypto interface - removeTokenBindingKey() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    async clearKeystore(): Promise<boolean> {\r\n        const notImplErr = \"Crypto interface - clearKeystore() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    async signJwt(): Promise<string> {\r\n        const notImplErr = \"Crypto interface - signJwt() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    async hashString(): Promise<string> {\r\n        const notImplErr = \"Crypto interface - hashString() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    }\r\n};\r\n"],"mappings":";;;;;;AAAA;;;AAGG;AAoEU,IAAAA,6BAA6B,GAAY;EAClDC,aAAa,EAAE,SAAAA,CAAA;IACX,IAAMC,UAAU,GAAG,6DAA6D;IAChF,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;GACpD;EACDG,YAAY,EAAE,SAAAA,CAAA;IACV,IAAMH,UAAU,GAAG,4DAA4D;IAC/E,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;GACpD;EACDI,YAAY,EAAE,SAAAA,CAAA;IACV,IAAMJ,UAAU,GAAG,4DAA4D;IAC/E,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;GACpD;EACKK,iBAAiB,EAAvB,SAAAA,CAAA;;;;QACUL,UAAU,GAAG,iEAAiE;QACpF,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;;;EACpD;EACKM,sBAAsB,EAA5B,SAAAA,CAAA;;;;QACUN,UAAU,GAAG,sEAAsE;QACzF,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;;;EACpD;EACKO,qBAAqB,EAA3B,SAAAA,CAAA;;;;QACUP,UAAU,GAAG,qEAAqE;QACxF,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;;;EACpD;EACKQ,aAAa,EAAnB,SAAAA,CAAA;;;;QACUR,UAAU,GAAG,6DAA6D;QAChF,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;;;EACpD;EACKS,OAAO,EAAb,SAAAA,CAAA;;;;QACUT,UAAU,GAAG,uDAAuD;QAC1E,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;;;EACpD;EACKU,UAAU,EAAhB,SAAAA,CAAA;;;;QACUV,UAAU,GAAG,0DAA0D;QAC7E,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;;;EACpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*! @azure/msal-common v13.3.3 2024-06-06 */\n'use strict';\n\nimport { ThrottlingConstants } from '../../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar ThrottlingEntity = /** @class */function () {\n  function ThrottlingEntity() {}\n  /**\r\n   * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n   * @param key\r\n   * @param entity\r\n   */\n  ThrottlingEntity.isThrottlingEntity = function (key, entity) {\n    var validateKey = false;\n    if (key) {\n      validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n    }\n    var validateEntity = true;\n    if (entity) {\n      validateEntity = entity.hasOwnProperty(\"throttleTime\");\n    }\n    return validateKey && validateEntity;\n  };\n  return ThrottlingEntity;\n}();\nexport { ThrottlingEntity };","map":{"version":3,"names":["ThrottlingEntity","isThrottlingEntity","key","entity","validateKey","indexOf","ThrottlingConstants","THROTTLING_PREFIX","validateEntity","hasOwnProperty"],"sources":["C:\\Users\\gustavo.souza\\OneDrive - INSTITUTO DONATO DE OFTALMOLOGIA LTDA\\Documentos\\PROJETOS\\PAINEL_BI\\frontend\\node_modules\\@azure\\msal-common\\src\\cache\\entities\\ThrottlingEntity.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ThrottlingConstants } from \"../../utils/Constants\";\r\n\r\nexport class ThrottlingEntity {\r\n    // Unix-time value representing the expiration of the throttle\r\n    throttleTime: number;\r\n    // Information provided by the server\r\n    error?: string;\r\n    errorCodes?: Array<string>;\r\n    errorMessage?: string;\r\n    subError?: string;\r\n\r\n    /**\r\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n     * @param key\r\n     * @param entity\r\n     */\r\n    static isThrottlingEntity(key: string, entity?: object): boolean {\r\n        \r\n        let validateKey: boolean = false;\r\n        if (key) {\r\n            validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\r\n        }\r\n        \r\n        let validateEntity: boolean = true;\r\n        if (entity) {\r\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\r\n        }\r\n\r\n        return validateKey && validateEntity;\r\n    }\r\n}\r\n"],"mappings":";;;;;AAAA;;;AAGG;AAIH,IAAAA,gBAAA;EAAA,SAAAA,iBAAA,G;EASI;;;;AAIG;EACIA,gBAAA,CAAAC,kBAAkB,GAAzB,UAA0BC,GAAW,EAAEC,MAAe;IAElD,IAAIC,WAAW,GAAY,KAAK;IAChC,IAAIF,GAAG,EAAE;MACLE,WAAW,GAAGF,GAAG,CAACG,OAAO,CAACC,mBAAmB,CAACC,iBAAiB,CAAC,KAAK,CAAC;IACzE;IAED,IAAIC,cAAc,GAAY,IAAI;IAClC,IAAIL,MAAM,EAAE;MACRK,cAAc,GAAGL,MAAM,CAACM,cAAc,CAAC,cAAc,CAAC;IACzD;IAED,OAAOL,WAAW,IAAII,cAAc;GACvC;EACL,OAACR,gBAAA;AAAD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
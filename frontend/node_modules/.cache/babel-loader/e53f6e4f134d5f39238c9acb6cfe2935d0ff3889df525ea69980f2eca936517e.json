{"ast":null,"code":"/*! @azure/msal-common v13.3.3 2024-06-06 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from './AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\nvar JoseHeaderErrorMessage = {\n  missingKidError: {\n    code: \"missing_kid_error\",\n    desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\"\n  },\n  missingAlgError: {\n    code: \"missing_alg_error\",\n    desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\"\n  }\n};\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\nvar JoseHeaderError = /** @class */function (_super) {\n  __extends(JoseHeaderError, _super);\n  function JoseHeaderError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n    _this.name = \"JoseHeaderError\";\n    Object.setPrototypeOf(_this, JoseHeaderError.prototype);\n    return _this;\n  }\n  /**\r\n   * Creates an error thrown when keyId isn't set on JOSE header.\r\n   */\n  JoseHeaderError.createMissingKidError = function () {\n    return new JoseHeaderError(JoseHeaderErrorMessage.missingKidError.code, JoseHeaderErrorMessage.missingKidError.desc);\n  };\n  /**\r\n   * Creates an error thrown when algorithm isn't set on JOSE header.\r\n   */\n  JoseHeaderError.createMissingAlgError = function () {\n    return new JoseHeaderError(JoseHeaderErrorMessage.missingAlgError.code, JoseHeaderErrorMessage.missingAlgError.desc);\n  };\n  return JoseHeaderError;\n}(AuthError);\nexport { JoseHeaderError, JoseHeaderErrorMessage };","map":{"version":3,"names":["JoseHeaderErrorMessage","missingKidError","code","desc","missingAlgError","JoseHeaderError","_super","__extends","errorCode","errorMessage","_this","call","name","Object","setPrototypeOf","prototype","createMissingKidError","createMissingAlgError","AuthError"],"sources":["C:\\Users\\gustavo.souza\\OneDrive - INSTITUTO DONATO DE OFTALMOLOGIA LTDA\\Documentos\\PROJETOS\\PAINEL_BI\\frontend\\node_modules\\@azure\\msal-common\\src\\error\\JoseHeaderError.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"./AuthError\";\r\n\r\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const JoseHeaderErrorMessage = {\r\n    missingKidError: {\r\n        code: \"missing_kid_error\",\r\n        desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\"\r\n    },\r\n    missingAlgError: {\r\n        code: \"missing_alg_error\",\r\n        desc: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\"\r\n    },\r\n};\r\n\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nexport class JoseHeaderError extends AuthError {\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"JoseHeaderError\";\r\n\r\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when keyId isn't set on JOSE header.\r\n     */\r\n    static createMissingKidError(): JoseHeaderError {\r\n        return new JoseHeaderError(JoseHeaderErrorMessage.missingKidError.code, JoseHeaderErrorMessage.missingKidError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when algorithm isn't set on JOSE header.\r\n     */\r\n    static createMissingAlgError(): JoseHeaderError {\r\n        return new JoseHeaderError(JoseHeaderErrorMessage.missingAlgError.code, JoseHeaderErrorMessage.missingAlgError.desc);\r\n    }\r\n}\r\n"],"mappings":";;;;;;AAAA;;;AAGG;AAIH;;AAEG;AACU,IAAAA,sBAAsB,GAAG;EAClCC,eAAe,EAAE;IACbC,IAAI,EAAE,mBAAmB;IACzBC,IAAI,EAAE;EACT;EACDC,eAAe,EAAE;IACbF,IAAI,EAAE,mBAAmB;IACzBC,IAAI,EAAE;EACT;;AAGL;;AAEG;AACH,IAAAE,eAAA,0BAAAC,MAAA;EAAqCC,SAAS,CAAAF,eAAA,EAAAC,MAAA;EAC1C,SAAYD,gBAAAG,SAAiB,EAAEC,YAAqB;IAApD,IAAAC,KAAA,GACIJ,MAAM,CAAAK,IAAA,OAAAH,SAAS,EAAEC,YAAY,CAAC,IAIjC;IAHGC,KAAI,CAACE,IAAI,GAAG,iBAAiB;IAE7BC,MAAM,CAACC,cAAc,CAACJ,KAAI,EAAEL,eAAe,CAACU,SAAS,CAAC;;;EAG1D;;AAEG;EACIV,eAAA,CAAAW,qBAAqB,GAA5B;IACI,OAAO,IAAIX,eAAe,CAACL,sBAAsB,CAACC,eAAe,CAACC,IAAI,EAAEF,sBAAsB,CAACC,eAAe,CAACE,IAAI,CAAC;GACvH;EAED;;AAEG;EACIE,eAAA,CAAAY,qBAAqB,GAA5B;IACI,OAAO,IAAIZ,eAAe,CAACL,sBAAsB,CAACI,eAAe,CAACF,IAAI,EAAEF,sBAAsB,CAACI,eAAe,CAACD,IAAI,CAAC;GACvH;EACL,OAACE,eAAA;AAAD,CArBA,CAAqCa,SAAS,CAqB7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
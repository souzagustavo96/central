{"ast":null,"code":"/*! @azure/msal-browser v2.39.0 2024-06-06 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar NavigationClient = /** @class */function () {\n  function NavigationClient() {}\n  /**\r\n   * Navigates to other pages within the same web application\r\n   * @param url\r\n   * @param options\r\n   */\n  NavigationClient.prototype.navigateInternal = function (url, options) {\n    return NavigationClient.defaultNavigateWindow(url, options);\n  };\n  /**\r\n   * Navigates to other pages outside the web application i.e. the Identity Provider\r\n   * @param url\r\n   * @param options\r\n   */\n  NavigationClient.prototype.navigateExternal = function (url, options) {\n    return NavigationClient.defaultNavigateWindow(url, options);\n  };\n  /**\r\n   * Default navigation implementation invoked by the internal and external functions\r\n   * @param url\r\n   * @param options\r\n   */\n  NavigationClient.defaultNavigateWindow = function (url, options) {\n    if (options.noHistory) {\n      window.location.replace(url);\n    } else {\n      window.location.assign(url);\n    }\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        resolve(true);\n      }, options.timeout);\n    });\n  };\n  return NavigationClient;\n}();\nexport { NavigationClient };","map":{"version":3,"names":["NavigationClient","prototype","navigateInternal","url","options","defaultNavigateWindow","navigateExternal","noHistory","window","location","replace","assign","Promise","resolve","setTimeout","timeout"],"sources":["C:\\Users\\gustavo.souza\\OneDrive - INSTITUTO DONATO DE OFTALMOLOGIA LTDA\\Documentos\\PROJETOS\\PAINEL_BI\\frontend\\node_modules\\@azure\\msal-browser\\src\\navigation\\NavigationClient.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { INavigationClient } from \"./INavigationClient\";\r\nimport { NavigationOptions } from \"./NavigationOptions\";\r\n\r\nexport class NavigationClient implements INavigationClient {\r\n    /**\r\n     * Navigates to other pages within the same web application\r\n     * @param url \r\n     * @param options \r\n     */\r\n    navigateInternal(url: string, options: NavigationOptions): Promise<boolean>{\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n\r\n    /**\r\n     * Navigates to other pages outside the web application i.e. the Identity Provider\r\n     * @param url \r\n     * @param options \r\n     */\r\n    navigateExternal(url: string, options: NavigationOptions): Promise<boolean> {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n\r\n    /**\r\n     * Default navigation implementation invoked by the internal and external functions\r\n     * @param url \r\n     * @param options \r\n     */\r\n    private static defaultNavigateWindow(url: string, options: NavigationOptions): Promise<boolean> {\r\n        if (options.noHistory) {\r\n            window.location.replace(url);\r\n        } else {\r\n            window.location.assign(url);\r\n        }\r\n\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, options.timeout);\r\n        });\r\n    }\r\n}\r\n"],"mappings":";;;AAAA;;;AAGG;AAKH,IAAAA,gBAAA;EAAA,SAAAA,iBAAA,G;EACI;;;;AAIG;EACHA,gBAAA,CAAAC,SAAA,CAAAC,gBAAgB,GAAhB,UAAiBC,GAAW,EAAEC,OAA0B;IACpD,OAAOJ,gBAAgB,CAACK,qBAAqB,CAACF,GAAG,EAAEC,OAAO,CAAC;GAC9D;EAED;;;;AAIG;EACHJ,gBAAA,CAAAC,SAAA,CAAAK,gBAAgB,GAAhB,UAAiBH,GAAW,EAAEC,OAA0B;IACpD,OAAOJ,gBAAgB,CAACK,qBAAqB,CAACF,GAAG,EAAEC,OAAO,CAAC;GAC9D;EAED;;;;AAIG;EACYJ,gBAAA,CAAAK,qBAAqB,GAApC,UAAqCF,GAAW,EAAEC,OAA0B;IACxE,IAAIA,OAAO,CAACG,SAAS,EAAE;MACnBC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACP,GAAG,CAAC;IAC/B,OAAM;MACHK,MAAM,CAACC,QAAQ,CAACE,MAAM,CAACR,GAAG,CAAC;IAC9B;IAED,OAAO,IAAIS,OAAO,CAAC,UAACC,OAAO;MACvBC,UAAU,CAAC;QACPD,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,EAAET,OAAO,CAACW,OAAO,CAAC;IACvB,CAAC,CAAC;GACL;EACL,OAACf,gBAAA;AAAD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
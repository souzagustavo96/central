{"ast":null,"code":"/*! @azure/msal-common v13.3.3 2024-06-06 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { Constants } from '../utils/Constants.js';\nimport { AuthError } from './AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\nvar InteractionRequiredServerErrorMessage = [\"interaction_required\", \"consent_required\", \"login_required\"];\nvar InteractionRequiredAuthSubErrorMessage = [\"message_only\", \"additional_action\", \"basic_action\", \"user_password_expired\", \"consent_required\"];\n/**\r\n * Interaction required errors defined by the SDK\r\n */\nvar InteractionRequiredAuthErrorMessage = {\n  noTokensFoundError: {\n    code: \"no_tokens_found\",\n    desc: \"No refresh token found in the cache. Please sign-in.\"\n  },\n  native_account_unavailable: {\n    code: \"native_account_unavailable\",\n    desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\n  }\n};\n/**\r\n * Error thrown when user interaction is required.\r\n */\nvar InteractionRequiredAuthError = /** @class */function (_super) {\n  __extends(InteractionRequiredAuthError, _super);\n  function InteractionRequiredAuthError(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims) {\n    var _this = _super.call(this, errorCode, errorMessage, subError) || this;\n    Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\n    _this.timestamp = timestamp || Constants.EMPTY_STRING;\n    _this.traceId = traceId || Constants.EMPTY_STRING;\n    _this.correlationId = correlationId || Constants.EMPTY_STRING;\n    _this.claims = claims || Constants.EMPTY_STRING;\n    _this.name = \"InteractionRequiredAuthError\";\n    return _this;\n  }\n  /**\r\n   * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n   * @param errorCode\r\n   * @param errorString\r\n   * @param subError\r\n   */\n  InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\n    var isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    var isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    var isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some(function (irErrorCode) {\n      return errorString.indexOf(irErrorCode) > -1;\n    });\n    return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n  };\n  /**\r\n   * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n   */\n  InteractionRequiredAuthError.createNoTokensFoundError = function () {\n    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\r\n   * @returns\r\n   */\n  InteractionRequiredAuthError.createNativeAccountUnavailableError = function () {\n    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\n  };\n  return InteractionRequiredAuthError;\n}(AuthError);\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage, InteractionRequiredServerErrorMessage };","map":{"version":3,"names":["InteractionRequiredServerErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessage","noTokensFoundError","code","desc","native_account_unavailable","InteractionRequiredAuthError","_super","__extends","errorCode","errorMessage","subError","timestamp","traceId","correlationId","claims","_this","call","Object","setPrototypeOf","prototype","Constants","EMPTY_STRING","name","isInteractionRequiredError","errorString","isInteractionRequiredErrorCode","indexOf","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","some","irErrorCode","createNoTokensFoundError","createNativeAccountUnavailableError","AuthError"],"sources":["C:\\Users\\gustavo.souza\\OneDrive - INSTITUTO DONATO DE OFTALMOLOGIA LTDA\\Documentos\\PROJETOS\\PAINEL_BI\\frontend\\node_modules\\@azure\\msal-common\\src\\error\\InteractionRequiredAuthError.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Constants } from \"../utils/Constants\";\r\nimport { AuthError } from \"./AuthError\";\r\n\r\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\r\nexport const InteractionRequiredServerErrorMessage = [\r\n    \"interaction_required\",\r\n    \"consent_required\",\r\n    \"login_required\"\r\n];\r\n\r\nexport const InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\"\r\n];\r\n\r\n/**\r\n * Interaction required errors defined by the SDK\r\n */\r\nexport const InteractionRequiredAuthErrorMessage = {\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No refresh token found in the cache. Please sign-in.\"\r\n    },\r\n    native_account_unavailable: {\r\n        code: \"native_account_unavailable\",\r\n        desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\r\n    }\r\n};\r\n\r\n/**\r\n * Error thrown when user interaction is required.\r\n */\r\nexport class InteractionRequiredAuthError extends AuthError {\r\n    /**\r\n     * The time the error occured at\r\n     */\r\n    timestamp: string;\r\n\r\n    /**\r\n     * TraceId associated with the error\r\n     */\r\n    traceId: string;\r\n\r\n    /**\r\n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/claims-challenge.md\r\n     * \r\n     * A string with extra claims needed for the token request to succeed\r\n     * web site: redirect the user to the authorization page and set the extra claims\r\n     * web api: include the claims in the WWW-Authenticate header that are sent back to the client so that it knows to request a token with the extra claims\r\n     * desktop application or browser context: include the claims when acquiring the token interactively\r\n     * app to app context (client_credentials): include the claims in the AcquireTokenByClientCredential request\r\n     */\r\n    claims: string;\r\n\r\n    constructor(errorCode?: string, errorMessage?: string, subError?: string, timestamp?: string, traceId?: string, correlationId?: string, claims?: string) {\r\n        super(errorCode, errorMessage, subError);\r\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\r\n        \r\n        this.timestamp = timestamp || Constants.EMPTY_STRING;\r\n        this.traceId = traceId || Constants.EMPTY_STRING;\r\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\r\n        this.claims = claims || Constants.EMPTY_STRING;\r\n        this.name = \"InteractionRequiredAuthError\";\r\n    }\r\n\r\n    /**\r\n     * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n     * @param errorCode \r\n     * @param errorString \r\n     * @param subError \r\n     */\r\n    static isInteractionRequiredError(errorCode?: string, errorString?: string, subError?: string): boolean {\r\n        const isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\r\n        const isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n        const isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some((irErrorCode) => {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n\r\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n     */\r\n    static createNoTokensFoundError(): InteractionRequiredAuthError {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\r\n     * @returns \r\n     */\r\n    static createNativeAccountUnavailableError(): InteractionRequiredAuthError {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\r\n    }\r\n}\r\n"],"mappings":";;;;;;;AAAA;;;AAGG;AAKH;;AAEG;AACU,IAAAA,qCAAqC,GAAG,CACjD,sBAAsB,EACtB,kBAAkB,EAClB,gBAAgB,C;AAGP,IAAAC,sCAAsC,GAAG,CAClD,cAAc,EACd,mBAAmB,EACnB,cAAc,EACd,uBAAuB,EACvB,kBAAkB,C;AAGtB;;AAEG;AACU,IAAAC,mCAAmC,GAAG;EAC/CC,kBAAkB,EAAE;IAChBC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACT;EACDC,0BAA0B,EAAE;IACxBF,IAAI,EAAE,4BAA4B;IAClCC,IAAI,EAAE;EACT;;AAGL;;AAEG;AACH,IAAAE,4BAAA,0BAAAC,MAAA;EAAkDC,SAAS,CAAAF,4BAAA,EAAAC,MAAA;EAsBvD,SAAAD,6BAAYG,SAAkB,EAAEC,YAAqB,EAAEC,QAAiB,EAAEC,SAAkB,EAAEC,OAAgB,EAAEC,aAAsB,EAAEC,MAAe;IAAvJ,IAAAC,KAAA,GACIT,MAAA,CAAAU,IAAA,OAAMR,SAAS,EAAEC,YAAY,EAAEC,QAAQ,CAAC,IAQ3C;IAPGO,MAAM,CAACC,cAAc,CAACH,KAAI,EAAEV,4BAA4B,CAACc,SAAS,CAAC;IAEnEJ,KAAI,CAACJ,SAAS,GAAGA,SAAS,IAAIS,SAAS,CAACC,YAAY;IACpDN,KAAI,CAACH,OAAO,GAAGA,OAAO,IAAIQ,SAAS,CAACC,YAAY;IAChDN,KAAI,CAACF,aAAa,GAAGA,aAAa,IAAIO,SAAS,CAACC,YAAY;IAC5DN,KAAI,CAACD,MAAM,GAAGA,MAAM,IAAIM,SAAS,CAACC,YAAY;IAC9CN,KAAI,CAACO,IAAI,GAAG,8BAA8B;;;EAG9C;;;;;AAKG;EACIjB,4BAAA,CAAAkB,0BAA0B,GAAjC,UAAkCf,SAAkB,EAAEgB,WAAoB,EAAEd,QAAiB;IACzF,IAAMe,8BAA8B,GAAG,CAAC,CAACjB,SAAS,IAAIV,qCAAqC,CAAC4B,OAAO,CAAClB,SAAS,CAAC,GAAG,CAAC,CAAC;IACnH,IAAMmB,6BAA6B,GAAG,CAAC,CAACjB,QAAQ,IAAIX,sCAAsC,CAAC2B,OAAO,CAAChB,QAAQ,CAAC,GAAG,CAAC,CAAC;IACjH,IAAMkB,8BAA8B,GAAG,CAAC,CAACJ,WAAW,IAAI1B,qCAAqC,CAAC+B,IAAI,CAAC,UAACC,WAAW;MAC3G,OAAON,WAAW,CAACE,OAAO,CAACI,WAAW,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC;IAEF,OAAOL,8BAA8B,IAAIG,8BAA8B,IAAID,6BAA6B;GAC3G;EAED;;AAEG;EACItB,4BAAA,CAAA0B,wBAAwB,GAA/B;IACI,OAAO,IAAI1B,4BAA4B,CAACL,mCAAmC,CAACC,kBAAkB,CAACC,IAAI,EAAEF,mCAAmC,CAACC,kBAAkB,CAACE,IAAI,CAAC;GACpK;EAED;;;AAGG;EACIE,4BAAA,CAAA2B,mCAAmC,GAA1C;IACI,OAAO,IAAI3B,4BAA4B,CAACL,mCAAmC,CAACI,0BAA0B,CAACF,IAAI,EAAEF,mCAAmC,CAACI,0BAA0B,CAACD,IAAI,CAAC;GACpL;EACL,OAACE,4BAAA;AAAD,CA/DA,CAAkD4B,SAAS,CA+D1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
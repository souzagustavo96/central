{"ast":null,"code":"/*! @azure/msal-browser v2.39.0 2024-06-06 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar MemoryStorage = /** @class */function () {\n  function MemoryStorage() {\n    this.cache = new Map();\n  }\n  MemoryStorage.prototype.getItem = function (key) {\n    return this.cache.get(key) || null;\n  };\n  MemoryStorage.prototype.setItem = function (key, value) {\n    this.cache.set(key, value);\n  };\n  MemoryStorage.prototype.removeItem = function (key) {\n    this.cache.delete(key);\n  };\n  MemoryStorage.prototype.getKeys = function () {\n    var cacheKeys = [];\n    this.cache.forEach(function (value, key) {\n      cacheKeys.push(key);\n    });\n    return cacheKeys;\n  };\n  MemoryStorage.prototype.containsKey = function (key) {\n    return this.cache.has(key);\n  };\n  MemoryStorage.prototype.clear = function () {\n    this.cache.clear();\n  };\n  return MemoryStorage;\n}();\nexport { MemoryStorage };","map":{"version":3,"names":["MemoryStorage","cache","Map","prototype","getItem","key","get","setItem","value","set","removeItem","delete","getKeys","cacheKeys","forEach","push","containsKey","has","clear"],"sources":["C:\\Users\\gustavo.souza\\OneDrive - INSTITUTO DONATO DE OFTALMOLOGIA LTDA\\Documentos\\PROJETOS\\PAINEL_BI\\frontend\\node_modules\\@azure\\msal-browser\\src\\cache\\MemoryStorage.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IWindowStorage } from \"./IWindowStorage\";\r\n\r\nexport class MemoryStorage<T> implements IWindowStorage<T> {\r\n\r\n    private cache: Map<string, T>;\r\n\r\n    constructor() {\r\n        this.cache = new Map<string, T>();\r\n    }\r\n\r\n    getItem(key: string): T | null {\r\n        return this.cache.get(key) || null;\r\n    }\r\n\r\n    setItem(key: string, value: T): void {\r\n        this.cache.set(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        this.cache.delete(key);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        const cacheKeys: string[] = [];\r\n        this.cache.forEach((value: T, key: string) => {\r\n            cacheKeys.push(key);\r\n        });\r\n        return cacheKeys;\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return this.cache.has(key);\r\n    }\r\n\r\n    clear() :void {\r\n        this.cache.clear();\r\n    }\r\n}\r\n"],"mappings":";;;AAAA;;;AAGG;AAIH,IAAAA,aAAA;EAII,SAAAA,cAAA;IACI,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,EAAa;;EAGrCF,aAAO,CAAAG,SAAA,CAAAC,OAAA,GAAP,UAAQC,GAAW;IACf,OAAO,IAAI,CAACJ,KAAK,CAACK,GAAG,CAACD,GAAG,CAAC,IAAI,IAAI;GACrC;EAEDL,aAAA,CAAAG,SAAA,CAAAI,OAAO,GAAP,UAAQF,GAAW,EAAEG,KAAQ;IACzB,IAAI,CAACP,KAAK,CAACQ,GAAG,CAACJ,GAAG,EAAEG,KAAK,CAAC;GAC7B;EAEDR,aAAU,CAAAG,SAAA,CAAAO,UAAA,GAAV,UAAWL,GAAW;IAClB,IAAI,CAACJ,KAAK,CAACU,MAAM,CAACN,GAAG,CAAC;GACzB;EAEDL,aAAA,CAAAG,SAAA,CAAAS,OAAO,GAAP;IACI,IAAMC,SAAS,GAAa,EAAE;IAC9B,IAAI,CAACZ,KAAK,CAACa,OAAO,CAAC,UAACN,KAAQ,EAAEH,GAAW;MACrCQ,SAAS,CAACE,IAAI,CAACV,GAAG,CAAC;IACvB,CAAC,CAAC;IACF,OAAOQ,SAAS;GACnB;EAEDb,aAAW,CAAAG,SAAA,CAAAa,WAAA,GAAX,UAAYX,GAAW;IACnB,OAAO,IAAI,CAACJ,KAAK,CAACgB,GAAG,CAACZ,GAAG,CAAC;GAC7B;EAEDL,aAAA,CAAAG,SAAA,CAAAe,KAAK,GAAL;IACI,IAAI,CAACjB,KAAK,CAACiB,KAAK,EAAE;GACrB;EACL,OAAClB,aAAA;AAAD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}